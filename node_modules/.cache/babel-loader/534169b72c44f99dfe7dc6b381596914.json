{"ast":null,"code":"var _jsxFileName = \"/home/egidio17/Escritorio/tarea3/src/components/Exchanges.jsx\";\nimport React, { useState } from 'react';\nimport './../App.css';\n\nconst Exchanges = props => {\n  // data={data_exchanges} data2={data_sell} data3={data_buy} data4={data_update}/>))}\n  const exchanges = props.data;\n  const sells = props.data2;\n  const buys = props.data3;\n  let suma_buys = 0;\n  var result = sells.reduce(function (tot, arr) {\n    // return the sum with previous value\n    return tot + arr.volume; // set initial value as 0\n  }, 0); //  suma_buys = buys.map((d) => parseInt(suma_buys) + parseInt(d.volume));\n\n  let suma_sells = 0;\n  suma_sells = sells.map(d => parseInt(suma_sells) + parseInt(d.volume));\n  var suma_total = suma_buys + suma_sells;\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, exchanges[0]), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, result), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, suma_buys), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, suma_total));\n};\n\nexport default Exchanges;","map":{"version":3,"sources":["/home/egidio17/Escritorio/tarea3/src/components/Exchanges.jsx"],"names":["React","useState","Exchanges","props","exchanges","data","sells","data2","buys","data3","suma_buys","result","reduce","tot","arr","volume","suma_sells","map","d","parseInt","suma_total"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,cAAP;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAE1B;AAEC,QAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACI,KAApB;AACA,QAAMC,IAAI,GAAGL,KAAK,CAACM,KAAnB;AAKA,MAAIC,SAAS,GAAG,CAAhB;AAEA,MAAIC,MAAM,GAAGL,KAAK,CAACM,MAAN,CAAa,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACzC;AACA,WAAOD,GAAG,GAAGC,GAAG,CAACC,MAAjB,CAFyC,CAIzC;AACD,GALU,EAKT,CALS,CAAb,CAbyB,CAmB3B;;AACE,MAAIC,UAAU,GAAG,CAAjB;AACAA,EAAAA,UAAU,GAAGV,KAAK,CAACW,GAAN,CAAWC,CAAD,IAAOC,QAAQ,CAACH,UAAD,CAAR,GAAuBG,QAAQ,CAACD,CAAC,CAACH,MAAH,CAAhD,CAAb;AAEA,MAAIK,UAAU,GAAGV,SAAS,GAAGM,UAA7B;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,SAAS,CAAC,CAAD,CAAd,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKO,MAAL,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,SAAL,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKU,UAAL,CANF,CADJ;AAYH,CA3CD;;AA6CA,eAAelB,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport './../App.css';\n\nconst Exchanges = (props) => {\n\n   // data={data_exchanges} data2={data_sell} data3={data_buy} data4={data_update}/>))}\n\n    const exchanges = props.data;\n    const sells = props.data2;\n    const buys = props.data3;\n\n    \n\n\n    let suma_buys = 0;\n\n    var result = sells.reduce(function(tot, arr) { \n        // return the sum with previous value\n        return tot + arr.volume;\n      \n        // set initial value as 0\n      },0);\n  //  suma_buys = buys.map((d) => parseInt(suma_buys) + parseInt(d.volume));\n    let suma_sells = 0;\n    suma_sells = sells.map((d) => parseInt(suma_sells) + parseInt(d.volume));\n\n    var suma_total = suma_buys + suma_sells;\n\n\n\n    \n\n\n\n    return( \n        <tr>\n          <th scope=\"row\">{}</th>\n          <td>{exchanges[0]}</td>\n          <td>{}</td>\n          <td>{result}</td>\n          <td>{suma_buys}</td>\n          <td>{suma_total}</td>\n        </tr>\n        \n    )\n\n};\n\nexport default Exchanges;"]},"metadata":{},"sourceType":"module"}